<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.hotplace.model.mapper.HotPlaceMapper">

	<resultMap type="HotPlaceDto" id="hotplace">
		<result column="hotplace_no" property="hotplaceNo"/>
		<result column="user_id" property="userId"/>
		<result column="name" property="userName"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="address" property="address"/>
		<result column="date" property="date"/>
		<result column="recommendation" property="recommendation"/>
		<result column="save_folder" property="saveFolder"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>
	</resultMap>

	<insert id="write" parameterType="HotPlaceDto" useGeneratedKeys="true" keyProperty="hotplaceNo">
		insert into hotplace (user_id, title, content, address, save_folder, original_file, save_file)
		values (#{userId}, #{title}, #{content}, #{address}, #{saveFolder}, #{originalFile}, #{saveFile})
	</insert>

	<sql id="search">
		<if test="word != null and word != ''">
			and ${key} like concat('%', #{word}, '%')
		</if>
		<if test="sort != null and sort != 'date'">
			 order by ${sort} desc
		</if>
		<if test="sort != null and sort == 'date'">
			 order by date
		</if>
	</sql>

	<select id="hotplaceList" parameterType="map" resultMap="hotplace">
		select h.hotplace_no, h.user_id, h.title, h.content, h.address, h.recommendation, h.save_folder, h.original_file, h.save_file, h.date, u.name
		from hotplace h, user u
		where h.user_id = u.id
		<include refid="search"></include>
		limit #{start}, #{listsize}
	</select>

	<select id="hotplaceTOP3" resultMap="hotplace">
		select h.hotplace_no, h.user_id, h.title, h.content, h.address, h.recommendation, h.save_folder, h.original_file, h.save_file, h.date, u.name
		from hotplace h, user u
		where h.user_id = u.id
		order by h.recommendation desc
		limit 3
	</select>
	
	<select id="recommendList" parameterType="String" resultMap="hotplace">
		select distinct hotplace_no
		from recommendation_hotplace
		where user_id = #{userId}
	</select>

	<insert id="addRecommendation" parameterType="map">
		insert into recommendation_hotplace (hotplace_no, user_id)
		values (#{hotplaceNo}, #{userId})
	</insert>
	
	<select id="getTotalCount" parameterType="map" resultType="int">
		select count(hotplace_no)
		from hotplace
		<where>
			<include refid="search"></include>
		</where>
	</select>
	<select id="getTotalCountWithJoin" parameterType="map" resultType="int">
		select count(hotplace_no)
		from hotplace h, user u
		where h.user_id =u.id
			<include refid="search"></include>
	</select>
	
	<select id="detail" parameterType="int" resultMap="hotplace">
		select h.hotplace_no, h.user_id, h.title, h.content, h.address, h.recommendation, h.save_folder, h.original_file, h.save_file, h.date, u.name
		from hotplace h, user u
		where h.user_id = u.id
		and h.hotplace_no = #{hotplaceNo}
	</select>

	<update id="writeFile" parameterType="map">
		update hotplace
		set save_folder = #{saveFolder}, original_file = #{originalFile}, save_file = #{saveFile} 
		where hotplace_no = #{hotplaceNo}
	</update>

	<update id="updateRecommendationCount" parameterType="int">
		update hotplace
		set recommendation = recommendation + 1
		where hotplace_no = #{hotplaceNo}
	</update>
	
	<update id="update" parameterType="HotPlaceDto">
		update hotplace
		set title = #{title}, content = #{content}, address=#{address}, save_folder = #{saveFolder}, original_file = #{originalFile}, save_file = #{saveFile} 
		where hotplace_no = #{hotplaceNo}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from hotplace
		where hotplace_no = #{hotplaceNo}
	</delete>

</mapper>